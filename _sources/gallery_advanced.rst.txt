# Fancying up our scripts

`sphinx-gallery` lets us generate scripts using reStructuredText **alongside python**. This means that we can include formatting to make it easier to follow our work. Let's add the next few blocks of code to our trapezoid plot and see how it looks.

```
###############################################################################
# Define our function
# -------------------
#
# Below we'll define a function that we'll integrate
# $$ 2.2a^3 + .3a^2 + 2a + .1 $$

```

```
###############################################################################
# Now plot the function
# ---------------------
#
# Using this function, we'll plot the function itself for a range of
# points.
```

```
###############################################################################
# Finally, plot the area
# ----------------------
#
# Finally we'll show how the area under the curve changes as a
# function of how many points we use to create the trapezoids.
```

## Changing the chosen gallery image
We can also manually choose the image we want for the gallery. Add this comment to the beginning of the script:

```
# sphinx_gallery_thumbnail_number = 2
```

Build the docs::

  make html -C ../sphinx_template/docs/

Take a look at the built page::

  open ../sphinx_template/docs/build/html/auto_examples/plot_trapezoid.html



Adding a subfolder of gallery images
------------------------------------

  If we have multiple galleries, we can easily pass them to sphinx-gallery by using sub-folders in our examples folder. Let's split our two examples into their own folders.

  Note that we need to have a `README.txt` file for **each folder**.


Adding back to the table of contents
------------------------------------

  We should also add a link to our gallery to our table of contents, that way it shows up on our main page. We'll add the following text:

  ```
  auto_examples/index
  ```

Wrapping up
-----------

  `sphinx-gallery` has many more things you can do with it, and we encourage you to check out their documentation to learn more about this toolbox.

  If you want some inspiration, you can [find a list of projects](https://github.com/sphinx-gallery/sphinx-gallery#who-uses-sphinx-gallery) using `sphinx-gallery` on their github readme.

  # Wrapping up
  We've now got a pretty decent platform for building documentation. Here are the basic steps we've covered:

  1. We used `sphinx` to automatically generate HTML for our website using structured text files.
  2. We used `numpydoc` to allow us to include formatting within the docstrings of our functions, and to more naturally incorporate math and parameter structure into the documentation.
  3. We used `sphinx-gallery` to create a beautiful gallery-style display of visualizations generated by our package.

  There are many more tools out there for building documentation, but these are a good start. We encourage you to play around with whatever suits your fancy. However, one thing you may notice is that there has been a lot of manual building and re-building going on. Fortunately, there are also tools for automating this process, which will be covered later.
